version: '3.5'

services:
  api01: &api
    hostname: api01
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    environment:
      - PG_HOST=postgres://3rfx8swo:CRXjHv7qOGFFKyY@db:5432/rinhadebackend
    ports:
      - "3001:3000"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '183MB'    

  api02:
    <<: *api
    hostname: api02
    ports:
      - "3002:3000"

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"    
    deploy:    
      resources:
        limits:
          cpus: '0.5'
          memory: '183MB'     

  db: # pgsql
    image: postgres:16.1-alpine3.19
    hostname: db
    environment:
      POSTGRES_DB: rinhadebackend
      POSTGRES_USER: 3rfx8swo
      POSTGRES_PASSWORD: CRXjHv7qOGFFKyY
    ports:
      - "5432:5432"  
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '183MB'

networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1           
